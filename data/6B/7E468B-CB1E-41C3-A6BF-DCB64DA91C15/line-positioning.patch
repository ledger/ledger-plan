diff --git a/emacs.cc b/emacs.cc
index 823e036..aa31f33 100644
--- a/emacs.cc
+++ b/emacs.cc
@@ -13,7 +13,7 @@ void format_emacs_transactions::write_entry(entry_t& entry)
       break;
     }
 
-  out << (((unsigned long)entry.beg_pos) + 1) << " ";
+  out << ((unsigned long)entry.beg_line) << " ";
 
   std::time_t date = entry.date();
   out << "(" << (date / 65536) << " " << (date % 65536) << " 0) ";
@@ -47,7 +47,7 @@ void format_emacs_transactions::operator()(transaction_t& xact)
       out << "\n";
     }
 
-    out << "  (" << (((unsigned long)xact.beg_pos) + 1) << " ";
+    out << "  (" << ((unsigned long)xact.beg_line) << " ";
     out << "\"" << xact_account(xact)->fullname() << "\" \""
    << xact.amount << "\"";
 
diff --git a/ledger.el b/ledger.el
index 22badf4..c99cff7 100644
--- a/ledger.el
+++ b/ledger.el
@@ -549,6 +549,12 @@ dropped."
       (forward-line 1)))
   (ledger-reconcile-save))
 
+(defun ledger-line-point (line-no)
+  "Return beginning point of line LINE-NO."
+  (save-restriction
+    (goto-line line-no)
+    (point)))
+
 (defun ledger-do-reconcile ()
   (let* ((buf ledger-buf)
     (account ledger-acct)
@@ -571,8 +577,8 @@ dropped."
          (cons
           (nth 0 item)
           (if ledger-clear-whole-entries
-         (copy-marker (nth 1 item))
-            (copy-marker (nth 0 xact)))))))
+         (copy-marker (ledger-line-point (nth 1 item)))
+            (copy-marker (ledger-line-point (nth 0 xact))))))))
        (insert (format "%s %-30s %-25s %15s\n"
              (format-time-string "%m/%d" (nth 2 item))
              (nth 4 item) (nth 1 xact) (nth 2 xact)))
diff --git a/textual.cc b/textual.cc
index 44ee354..1754b97 100644
--- a/textual.cc
+++ b/textual.cc
@@ -406,7 +406,7 @@ entry_t * parse_entry(std::istream& in, char * line, account_t * master,
   TIMER_START(entry_xacts);
 
   unsigned long end_pos;
-  unsigned long beg_line = linenum;
+  unsigned long beg_line;
 
   while (! in.eof() && (in.peek() == ' ' || in.peek() == '\t')) {
     unsigned long beg_pos = (unsigned long)in.tellg();
@@ -416,6 +416,7 @@ entry_t * parse_entry(std::istream& in, char * line, account_t * master,
     if (in.eof() && line[0] == '\0')
       break;
     end_pos = beg_pos + std::strlen(line) + 1;
+    beg_line = linenum;
     linenum++;
 
     if (line[0] == ' ' || line[0] == '\t' || line[0] == '\r') {
@@ -839,14 +840,14 @@ unsigned int textual_parser_t::parse(std::istream&    in,
       }
 
       default: {
-   unsigned int first_line = linenum;
+   unsigned int first_line = linenum - 1;
    unsigned long pos = beg_pos;
    if (entry_t * entry =
        parse_entry(in, line, account_stack.front(), *this, pos)) {
      if (journal->add_entry(entry)) {
        entry->src_idx  = src_idx;
        entry->beg_pos  = beg_pos;
-       entry->beg_line = beg_line;
+       entry->beg_line = first_line;
        entry->end_pos  = pos;
        entry->end_line = linenum;
        count++;
